{surrealql: {funcs: {api: {invoke: 's?o>o', timeout: d>*}, arr: {add: av>a, append: av>a, at: ai>*, boolean_and: aa>*, boolean_not: a>*, boolean_or: aa>*, boolean_xor: aa>*, clump: ai>a, combine: aa>a,
        complement: aa>a, concat: aa>a, difference: aa>a, distinct: a>a, fill: [a*>a, a*ii>a], first: a>*, flatten: a>a, fold: a**>v, group: a>a, insert: avn>a, intersect: aa>a, is_empty: a>b, join: as>s,
        last: a>*, len: a>n, logical_and: aa>*, logical_or: aa>*, logical_xor: aa>*, map: a*>*, matches: av>ab, max: a*>*, min: a*>*, pop: a>v, prepend: av>a, push: av>a, range: ii>a, reduce: a*>v, remove: an>a,
        repeat: '*i>a', reverse: a>a, shuffle: a>a, slice: aii>a, sort: [a>a, ab>a, as>a], sort_lexical: [a>a, ab>a, as>a], sort_natural: [a>a, ab>a, as>a], sort_natural_lexical: [a>a, ab>a, as>a], swap: aii>a,
        transpose: aa>aa, union: aa>a, windows: ai>a}, byt: {len: y>i}, dur: {days: d>n, hours: d>n, micros: d>n, millis: d>n, mins: d>n, nanos: d>n, secs: d>n, weeks: d>n, years: d>n}, fil: {bucket: '*>s',
        copy: s>*, copy_if_not_exists: s>*, delete: s>*, exists: s>b, get: s>y, head: '>o', key: '*>s', list: 's?o>ao', put: '>*', put_if_not_exists: '>*', rename: '>*', rename_if_not_exists: '>*'}, geo: {
        area: g>n, bearing: '**>n', centroid: g>n, distance: '**>n'}, htt: {delete: [s>v, so>v], get: [s>v, so>v], head: [s>0, so>0], patch: [so>v, soo>v], post: [so>v, soo>v], put: [so>v, soo>v]}, mat: {
        abs: n>n, acos: n>n, acot: n>n, asin: n>n, atan: n>n, bottom: ann>n, ceil: n>n, clamp: n**>n, cos: n>n, cot: n>n, fixed: nn>n, floor: n>n, interquartile: an>n, lerp: '***>n', lerpangle: '***>n',
        ln: n>n, log: n*>n, max: an>n, mean: an>n, median: an>n, midhinge: an>n, min: an>n, mode: an>n, nearestrank: ann>n, percentile: ann>n, pow: nn>n, product: an>n, round: n>n, sign: n>n, sin: n>n,
        spread: an>n, sqrt: n>n, stddev: an>n, sum: an>n, tan: n>n, top: ann>n, trimean: an>n, variance: an>n}, met: {id: r>v, tb: r>s}, obj: {entries: o>a, extend: oo>o, from_entries: a>o, is_empty: o>b,
        keys: o>a, len: o>n, remove: o*>o, values: o>a}, ran: {bool: ['>b', dd>d], enum: '*>*', float: ['>f', nn>f], guid: ['>s', n>s, '**>s'], int: ['>i', nn>i], string: ['>s', n>s, nn>s], ulid: ['>*',
          t>u], uuid: ['>u', t>u]}, rec: {exists: r>b, id: r>v, tb: r>s}, sea: {analyze: '*s>as', highlight: ssn*>*, offsets: n*>o, score: n>n}, seq: {next: '*>i'}, ses: {ac: '>s', db: '>s', id: '>s', ip: '>s',
        ns: '>s', origin: '>s', rd: '>s', token: '>s'}, str: {concat: s*>s, contains: ss>b, ends_with: ss>b, join: s*>s, len: s>n, lowercase: s>s, matches: ss>b, repeat: sn>s, replace: [sss>s, s*s>s], reverse: s>s,
        slice: snn>s, slug: s>s, split: ss>a, starts_with: ss>b, trim: s>s, uppercase: s>s, words: s>a}, tim: {ceil: td>t, day: '?t>n', floor: td>t, format: ts>s, group: ts>t, hour: '?t>n', max: at>t, micros: '?t>n',
        millis: '?t>n', min: at>t, minute: '?t>n', month: '?t>n', nano: '?t>n', now: '>t', round: td>t, second: '?t>n', timezone: '>s', unix: '?t>n', wday: '?t>n', week: '?t>n', yday: '?t>n', year: '?t>n'},
      typ: {array: '*>b', bool: '*>b', bytes: '*>b', datetime: '*>t', decimal: '*>*', duration: '*>d', field: '*>*', fields: '*>*', file: ss>*, float: '*>f', int: '*>i', number: '*>n', point: '*>*', range: '*>*',
        record: '*?s>r', string: ['*>s', '*>s'], table: '*>s', thing: '**>r', uuid: '*>u'}, val: {diff: vv>ao, patch: vao>v}, vec: {add: aa>a, angle: aa>n, cross: aa>a, divide: aa>a, dot: aa>n, magnitude: a>n,
        multiply: aa>n, normalize: a>a, project: aa>a, scale: an>a, subtract: aa>a}}, ops: {com: [=|IS, '!=|IS NOT', ==, '?=', '*=', <, <=, '>', '>='], fuz: ['~', '!~', '?~', '*~'], gra: [OUTSIDE, INTERSECTS],
      log: ['&&|AND', '|||OR', '!', '!!'], mat: [+, '-', "*|\xD7", "/|\xF7", '**'], nul: ['??', '?:'], oth: ["ANYINSIDE|\u2282", "NONEINSIDE|\u2284", MATCHES], set: ["CONTAINS|\u220B", "CONTAINSNOT|\u220C",
        "CONTAINSALL|\u2287", "CONTAINSANY|\u2283", "INSIDE|\u2208", "NOTINSIDE|\u2209", "ALLINSIDE|\u2286"]}, stmts: {acc: {k: [ACCESS, 'ON', ROOT]}, alt: {k: [ALTER, TABLE, IF]}, beg: {k: [BEGIN, TRANSACTION]},
      bre: {k: [BREAK]}, can: {k: [CANCEL, TRANSACTION]}, com: {k: [COMMIT, TRANSACTION]}, cont: {k: [CONTINUE]}, cre: {k: [CREATE, ONLY, CONTENT]}, def/ana: {k: [DEFINE, ANALYZER, OVERWRITE]}, def/api: {
        k: [DEFINE, API, OVERWRITE]}, def/buc: {k: [DEFINE, BUCKET, OVERWRITE]}, def/con: {k: [DEFINE, CONFIG, OVERWRITE]}, def/db: {k: [DEFINE, DATABASE, OVERWRITE]}, def/eve: {k: [DEFINE, EVENT, OVERWRITE]},
      def/fie: {k: [DEFINE, FIELD, OVERWRITE]}, def/fn: {k: [DEFINE, FUNCTION, OVERWRITE]}, def/idx: {k: [DEFINE, INDEX, OVERWRITE]}, def/ns: {k: [DEFINE, NAMESPACE, OVERWRITE]}, def/par: {k: [DEFINE, PARAM,
          OVERWRITE]}, def/sco: {k: [DEFINE, SCOPE, OVERWRITE]}, def/seq: {k: [DEFINE, SEQUENCE, OVERWRITE]}, def/tbl: {k: [DEFINE, TABLE, OVERWRITE]}, def/tok: {k: [DEFINE, TOKEN, OVERWRITE]}, def/use: {
        k: [DEFINE, USER, OVERWRITE]}, del: {k: [DELETE, FROM, ONLY]}, for: {k: [FOR, IN]}, inf: {k: [INFO, FOR, ROOT]}, ins: {k: [INSERT, IGNORE, RELATION]}, kil: {k: [KILL]}, let: {k: [LET]}, liv: {k: [
          LIVE, SELECT, VALUE]}, reb: {k: [REBUILD, INDEX, IF]}, rel: {k: [RELATE, ONLY, CONTENT]}, rem: {k: [REMOVE, NAMESPACE, IF]}, ret: {k: [RETURN]}, sel: {k: [SELECT, VALUE, AS]}, sho: {k: [SHOW,
          CHANGES, FOR]}, sle: {k: [SLEEP]}, thr: {k: [THROW]}, upd: {k: [UPDATE, ONLY, CONTENT]}, ups: {k: [UPSERT, ONLY, CONTENT]}, use: {k: [USE, NS, DB]}}, v: 2.3.7}}
